name: Android CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ANDROID_SDK_ROOT: $RUNNER_TOOL_CACHE/Android/Sdk
      ANDROID_HOME: $RUNNER_TOOL_CACHE/Android/Sdk
      PATH: |
        $ANDROID_SDK_ROOT/cmdline-tools/latest/bin
        $ANDROID_SDK_ROOT/platform-tools
        $ANDROID_SDK_ROOT/emulator
        $PATH

    steps:
      - uses: actions/checkout@v3

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'
          cache: gradle

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: Install Android SDK cmdline-tools
        run: |
          mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools"
          curl -fSL https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -o cli.zip
          unzip -q cli.zip -d "$ANDROID_SDK_ROOT/cmdline-tools"
          mv "$ANDROID_SDK_ROOT/cmdline-tools/cmdline-tools" "$ANDROID_SDK_ROOT/cmdline-tools/latest"
          rm cli.zip

      - name: Accept licenses & install packages
        run: |
          yes | sdkmanager --sdk_root="$ANDROID_SDK_ROOT" --licenses
          sdkmanager --sdk_root="$ANDROID_SDK_ROOT" \
            "platform-tools" "emulator" \
            "system-images;android-33;google_apis;x86_64" \
            "platforms;android-33" "build-tools;33.0.2"

      - name: Create AVD
        run: |
          echo "no" | avdmanager create avd \
            --name testAVD \
            --package "system-images;android-33;google_apis;x86_64" \
            --device "pixel" \
            --force

      - name: Start emulator and wait for boot
        run: |
          nohup emulator -avd testAVD -no-window -no-audio -gpu off &
          adb wait-for-device
          for i in {1..30}; do
            if adb shell getprop sys.boot_completed | grep -q "1"; then
              echo "Emulator booted in $i attempts"
              break
            fi
            echo "Waiting for emulator to bootâ€¦ ($i/30)"
            sleep 2
          done

      - name: Pub get & build debug APK
        run: |
          flutter pub get
          flutter build apk --debug

      - name: Install & launch on emulator
        run: |
          adb install -r build/app/outputs/flutter-apk/app-debug.apk
          adb shell am start \
            -n com.yourapp.id/.MainActivity || true

      - name: Kill emulator
        if: always()
        run: |
          adb -s emulator-5554 emu kill || true

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug.apk
          path: build/app/outputs/flutter-apk/app-debug.apk
